{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Scroll.js","Components/Search.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","className","alt","src","this","props","id","name","email","Component","CardList","robots","map","robo","i","Scroll","style","overflow","border","height","children","Search","type","placeholder","onChange","searchChange","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAmBeA,E,kDAhBX,aAAc,wC,0CAGd,WACI,OACI,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BC,KAAKC,MAAMC,GAArC,mBACrB,gCACE,6BAAKF,KAAKC,MAAME,OAChB,4BAAIH,KAAKC,MAAMG,kB,GAVVC,aCyBJC,E,kDAvBX,aAAc,wC,0CAId,WACI,IAAMC,EAASP,KAAKC,MAAMM,OAC1B,OAAQ,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEAR,GAAIO,EAAKP,GACTC,KAAMM,EAAKN,KACXC,MAAOK,EAAKL,OAHPM,Y,GAZFL,aCYRM,E,kDAbX,aAAc,wC,0CAId,WACI,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGf,KAAKC,MAAMe,e,GARLX,aCmBNY,E,kDAjBX,aAAc,wC,0CAId,WACI,OACA,qBAAKpB,UAAU,MAAf,SACA,uBACEA,UAAU,mCACVqB,KAAK,SACLC,YAAY,gBACZC,SAAUpB,KAAKC,MAAMoB,qB,GAZVhB,aCsCNiB,E,kDAjCb,aAAc,IAAD,8BACX,gBAOFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAPzC,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJJ,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAAElB,OAAQ2B,S,oBAG5C,WAAS,IAAD,OACAC,EAAiBnC,KAAK6B,MAAMtB,OAAO6B,QAAO,SAAA3B,GAAI,OAAIA,EAAKN,KAAKkC,cAAcC,SAAS,EAAKT,MAAMH,YAAYW,kBAChH,OACE,sBAAKxC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAQwB,aAAgBrB,KAAKuB,iBAC7B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUhB,OAAQ4B,a,GA1BR9B,aCMHkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6c9aa91f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Card extends Component{\n    constructor(){\n        super();\n    }\n    render(){\n        return (\n            <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${this.props.id}?size=200x200`} />\n            <div>\n              <h2>{this.props.name}</h2>\n              <p>{this.props.email}</p>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Card;","import React, {Component} from \"react\";\nimport Card from './Card';\n\nclass CardList extends Component{\n    constructor(){\n        super();\n    }\n\n    render(){\n        const robots = this.props.robots;\n        return (<div>\n            {\n                robots.map((robo, i) =>{\n                    return (\n                    <Card\n                    key={i}\n                    id={robo.id}\n                    name={robo.name}\n                    email={robo.email}\n                    ></Card>);\n                })\n            }\n        </div>);\n        \n    }\n}\n\nexport default CardList;","import React, {Component} from \"react\";\nclass Scroll extends Component{\n    constructor(){\n        super()\n    }\n\n    render(){\n        return (\n            <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n              {this.props.children}\n            </div>\n          );\n    }\n}\n\nexport default Scroll;","import React, {Component} from \"react\";\n\nclass Search extends Component{\n    constructor(){\n        super();\n    }\n\n    render(){\n        return(\n        <div className='pa2'>\n        <input\n          className='pa3 ba b--green bg-lightest-blue'\n          type='search'\n          placeholder='search robots'\n          onChange={this.props.searchChange}\n        />\n      </div>);\n    }\n}\n\nexport default Search;","import './App.css';\nimport CardList from '../Components/CardList';\nimport React, {Component} from 'react';\nimport Scroll from '../Components/Scroll';\nimport Search from '../Components/Search';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchField: event.target.value});\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => {this.setState({ robots: users})});\n  }\n\n  render(){\n    const filteredRobots = this.state.robots.filter(robo => robo.name.toLowerCase().includes(this.state.searchField.toLowerCase()));\n    return (\n      <div className=\"tc\">\n        <h1 className='f1'>RoboFriends</h1>\n        <Search searchChange = {this.onSearchChange}></Search>\n        <Scroll>\n        <CardList robots={filteredRobots}></CardList>\n        </Scroll>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}